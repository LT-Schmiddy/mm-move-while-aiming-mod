# Config file for an example Majora's Mask: Recompiled mod.

# Fields that end up in the mod's manifest.
[manifest]

# Unique ID of this mod. Pick something long enough that it'll never be the same as any other mod.
# The name displayed in the mod management menu is separate from this so this doesn't need to be human readable.
id = "mm_move_while_aiming"

# Version of this mod.
version = "1.0.2"

# Authors of this mod.
authors = [ "LT_Schmiddy" ]


# The name that will show up for this mod in the mod menu. This should be human readable.
display_name = "Move While Aiming"

# The description that will show up when this mod is displayed in the mod menu. This should be human readable.
description =  """
Allows Link to move with the analog while aiming in first-person. 
While active, the N64 analog input (left stick by default) will be used to move Link.
Aiming will be handled by the right-stick, overriding it's usual behavior.
Does not apply to shooting galleries, or Mini-games where Link should not be able to move around.

Also allows Link to control Epona while aiming with the bow.
"""

# A short description that will show up in this mod's entry in the mod list. This should be human readable and kept short
# to prevent it from being cut off due to the limited space.
short_description = "Allows Link to move with the analog while aiming in first-person."


# ID of the target recomp game.
game_id = "mm"

# Minimum version of the target recomp (e.g. Zelda 64: Recompiled) that this mod can run on.
minimum_recomp_version = "1.2.0"

# Dependency mods. Each entry is the mod's ID and then an optional minimum version of the dependency mod.
dependencies = [
# Example dependency:
#    "modname:1.0.0"
]

# Native libraries (e.g. DLLs) and the functions they export.
native_libraries = [
# Example native library:
#    { name = "my_native_library", funcs = ["my_native_library_function"] }
]

# Inputs to the mod tool.
[inputs]


# Input elf file to generate a mod from.
elf_path = "build/mod.elf"

# Reference symbol files.
func_reference_syms_file = "Zelda64RecompSyms/mm.us.rev1.syms.toml"
data_reference_syms_files = [ "Zelda64RecompSyms/mm.us.rev1.datasyms.toml", "Zelda64RecompSyms/mm.us.rev1.datasyms_static.toml" ]

# Output mod filename.
mod_filename = "mm_move_while_aiming"

# Additional files to include in the mod.
additional_files = [
    "thumb.dds"
]

[[manifest.config_options]]
id = "bow-fire-with-r"
name = "Fire the Bow with R"
description = """
The Bow can be optionally be fired with the R button, overriding shielding behavior.
Off - Feature Disabled
First Person - The Bow is only fired using R when in first person aiming.
Aiming - The Bow is only fired using R when it is being aimed, through first-person or lock-on.
Holding - The Bow can be fired with R as long as it is being held. Put it away or draw your sword to resume shielding behavior.
"""
type = "Enum"
options = ["Off", "First Person", "Aiming", "Holding"]
default = "First Person"

[[manifest.config_options]]
id = "hookshot-fire-with-r"
name = "Fire the Hookshot with R"
description = """
The Hookshot can be optionally be fired with the R button.
Off - Feature Disabled
First Person - The Hookshot is only fired using R when in first person aiming.
Aiming - The Hookshot is only fired using R when it is being aimed, through first-person or lock-on.
Holding - The Hookshot can be fired with R as long as it is being held. Put it away or draw your sword to resume shielding behavior.
"""
type = "Enum"
options = ["Off", "First Person", "Aiming", "Holding"]
default = "First Person"